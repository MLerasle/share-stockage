- content_for(:title, "Annonces")
.row#adverts_container
	.small-12.medium-12.large-9.columns.large-centered{style: "margin-top: 20px;"}
		= form_for '#', method: :get, id: "adverts_filter_form" do
			.row
				.small-12.columns
					= text_field_tag "filter[address]", (params[:filter][:address] rescue nil), id: "location_field", placeholder: "Où souhaitez-cous stocker?"
				/ .small-12.medium-3.columns
				/ 	= text_field_tag "filter[start_date]", (params[:filter][:start_date] rescue nil), placeholder: "Début"
				/ .small-12.medium-3.columns
				/ 	= text_field_tag "filter[end_date]", (params[:filter][:end_date] rescue nil), placeholder: "Fin"
			.row
				.small-12.medium-5.columns
					= select_tag "filter[advert_type]", options_for_select([["Box", 1], ["Cave", 2], ["Garage", 3], ["Grenier", 4]], params[:filter][:advert_type]), prompt: "Type d'espace"
				.small-12.medium-5.columns
					= select_tag "filter[sorting]", options_for_select([["Plus récentes d'abord", "created_at DESC"], ["Plus anciennes d'abord", "created_at ASC"], ["Prix croissant", "price ASC"], ["Prix décroissant", "price DESC"]], params[:filter][:sorting])
				.small-12.medium-2.columns.text-right
					= submit_tag "Rechercher", class: "button radius tiny info"

		- if @adverts.any?
			%table#adverts_table
				%tbody
					- @adverts.each do |advert|
						%tr{ "data-link" => advert_path(advert) }
							= render partial: 'advert_line', locals: { advert: advert }

		- else
			%fieldset
				%legend Aucun résultat
				%h4.subheader
					Désolé, nous n'avons trouvé aucune annonce correspondant à votre recherche.
				%br
				%h5.subheader Veuillez modifier vos critères de recherche.
		
		= paginate @adverts
		
- content_for :scripts do
	:javascript
		var input = document.getElementById('location_field');
		var autocomplete = new google.maps.places.Autocomplete(input, {
			types: ["geocode"]
		});
		var nowTemp = new Date();
		var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
		var checkin = $('#filter_start_date').fdatepicker({
			format: 'yyyy-mm-dd',
			onRender: function (date) {
				return date.valueOf() < now.valueOf() ? 'disabled' : '';
			}
		}).on('changeDate', function (ev) {
			if (ev.date.valueOf() > checkout.date.valueOf()) {
				var newDate = new Date(ev.date)
				newDate.setDate(newDate.getDate() + 1);
				checkout.update(newDate);
				}
				checkin.hide();
				$('#filter_end_date')[0].focus();
		}).data('datepicker');
		var checkout = $('#filter_end_date').fdatepicker({
			format: 'yyyy-mm-dd',
			onRender: function (date) {
				return date.valueOf() <= checkin.date.valueOf() ? 'disabled' : '';
			}
		}).on('changeDate', function (ev) {
			checkout.hide();
		}).data('datepicker');
		$("#filter_address").geocomplete();